class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<>();

        int i =0;
        int j = 0;

        long sum = 0;
        long cSum = 0;

        while(j<nums.length){
            cSum+=nums[j];

            map.put(nums[j],map.getOrDefault(nums[j],0)+1);

            while(i<=j && map.get(nums[j])>1){
                map.put(nums[i],map.get(nums[i])-1);
                if(map.get(nums[i])==0) map.remove(nums[i]);
                cSum-=nums[i];
                i++;
              
            }

            if(j-i+1==k){
                sum = Math.max(cSum,sum);
                map.remove(nums[i]);
                cSum-=nums[i];
                i++;
            }
            j++;
        }
        return  sum;
    }
}
